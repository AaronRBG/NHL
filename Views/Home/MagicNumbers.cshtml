@{
    @using NHL.Models
    @model NHL.Models.Info
}
@{
    Standing[] atlantic = Model.standings.standings.Where(s => s.Division == 1).ToArray();
    Standing[] metro = Model.standings.standings.Where(s => s.Division == 2).ToArray();
    Standing[] pacific = Model.standings.standings.Where(s => s.Division == 3).ToArray();
    Standing[] central = Model.standings.standings.Where(s => s.Division == 4).ToArray();
    byte[] atlanticTeams = Model.standings.getDivisionTeamsID(1);
    byte[] metroTeams = Model.standings.getDivisionTeamsID(2);
    byte[] pacificTeams = Model.standings.getDivisionTeamsID(3);
    byte[] centralTeams = Model.standings.getDivisionTeamsID(4);
    byte[] westernTeams = pacificTeams.Concat(centralTeams).ToArray();
    byte[] easternTeams = atlanticTeams.Concat(metroTeams).ToArray();
    string better = "<-";
}
<div class="text-center" style="padding-right: 10vw; padding-left: 10vw; overflow: auto;">
    <img src="~/icons/EasternConference.png" width="auto" height="100" />
    <div>
        <div style="float: left">
            <h4>ATLANTIC DIVISION</h4>
            <table class="table table-dark" style="color: white;">
                <thead class="thead-light">
                    <tr>
                        <th colspan="2">Team</th>
                        <th>1</th>
                        <th>2</th>
                        <th>3</th>
                        <th>4</th>
                        <th>5</th>
                        <th>6</th>
                        <th>7</th>
                        <th>8</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (byte teamA in atlanticTeams)
                    {
                        string aux = Model.teams.getTeamName(teamA).Replace(" ", "").Replace(".", "") + "_logo";
                    <tr>
                        <td><span class="@aux"></span></td>
                        <td>@Model.teams.getTeamName(teamA)</td>
                        @for (int i = 0; i < atlanticTeams.Length; i++)
                        {
                            double res = @Model.standings.magicNumbersDivision[teamA][i];
                            if (res == double.MaxValue)
                            {
                                <td class="table-danger">*</td>
                            }
                            else if ((Math.Round(res % Math.PI, 2) == 0) && res != 0)
                            {
                                res = ((res / 2) / Math.PI);
                                <td class="table-warning">@res</td>
                            }
                            else if ((Math.Round((res % Math.PI - Math.PI), 2) == 0) && res != 0)
                            {
                                res = Math.Round((res / 2) / Math.PI);
                                <td class="table-warning">@res</td>
                            }
                            else if (res > 0)
                            {
                                <td class="table-primary">@res</td>
                            }
                            else if (res == 0)
                            {
                                <td class="table-info">-</td>
                            }
                            else
                            {
                                <td class="table-success">@better</td>
                            }
                        }
                    </tr>
                    }
                </tbody>
            </table>
        </div>
        <div style="float: right">
            <h4>METROPOLITAN DIVISION</h4>
            <table class="table table-dark" style="color: white;">
                <thead class="thead-light">
                    <tr>
                        <th colspan="2">Team</th>
                        <th>1</th>
                        <th>2</th>
                        <th>3</th>
                        <th>4</th>
                        <th>5</th>
                        <th>6</th>
                        <th>7</th>
                        <th>8</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (byte teamA in metroTeams)
                    {
                        string aux = Model.teams.getTeamName(teamA).Replace(" ", "").Replace(".", "") + "_logo";
                    <tr>
                        <td><span class="@aux"></span></td>
                        <td>@Model.teams.getTeamName(teamA)</td>
                        @for (int i = 0; i < metroTeams.Length; i++)
                        {

                            double res = @Model.standings.magicNumbersDivision[teamA][i];
                            if (res == double.MaxValue)
                            {
                                <td class="table-danger">*</td>
                            }
                            else if ((Math.Round(res % Math.PI, 2) == 0) && res != 0)
                            {
                                res = ((res / 2) / Math.PI);
                                <td class="table-warning">@res</td>
                            }
                            else if ((Math.Round((res % Math.PI - Math.PI), 2) == 0) && res != 0)
                            {
                                res = Math.Round((res / 2) / Math.PI);
                                <td class="table-warning">@res</td>
                            }
                            else if (res > 0)
                            {
                                <td class="table-primary">@res</td>
                            }
                            else if (res == 0)
                            {
                                <td class="table-info">-</td>
                            }
                            else
                            {
                                <td class="table-success">@better</td>
                            }
                        }
                    </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div>
        <h4>EASTERN WILDCARDS</h4>
        <table class="table table-dark" style="color: white;">
            <thead class="thead-light">
                <tr>
                    <th colspan="2">Team</th>
                    <th>1</th>
                    <th>2</th>
                    <th>3</th>
                    <th>4</th>
                    <th>5</th>
                    <th>6</th>
                    <th>7</th>
                    <th>8</th>
                    <th>9</th>
                    <th>10</th>
                </tr>
            </thead>
            <tbody>
                @foreach (byte teamA in easternTeams)
                {
                    string aux = Model.teams.getTeamName(teamA).Replace(" ", "").Replace(".", "") + "_logo";
                <tr>
                    <td><span class="@aux"></span></td>
                    <td>@Model.teams.getTeamName(teamA)</td>
                    @for (int i = 0; i < centralTeams.Length; i++)
                    {
                        double res = @Model.standings.magicNumbersDivision[teamA][i];
                        if (res == double.MaxValue)
                        {
                            <td class="table-danger">*</td>
                        }
                        else if ((Math.Round(res % Math.PI, 2) == 0) && res != 0)
                        {
                            res = ((res / 2) / Math.PI);
                            <td class="table-warning">@res</td>
                        }
                        else if ((Math.Round((res % Math.PI - Math.PI), 2) == 0) && res != 0)
                        {
                            res = Math.Round((res / 2) / Math.PI);
                            <td class="table-warning">@res</td>
                        }
                        else if (res > 0)
                        {
                            <td class="table-primary">@res</td>
                        }
                        else if (res == 0)
                        {
                            <td class="table-info">-</td>
                        }
                        else
                        {
                            <td class="table-success">@better</td>
                        }
                    }
                </tr>
                }
            </tbody>
        </table>
    </div>
    </br>
    <img src="~/icons/WesternConference.png" width="auto" height="100" />
    <div>
        <div style="float: left">
            <h4>CENTRAL DIVISION</h4>
            <table class="table table-dark" style="color: white;">
                <thead class="thead-light">
                    <tr>
                        <th colspan="2">Team</th>
                        <th>1</th>
                        <th>2</th>
                        <th>3</th>
                        <th>4</th>
                        <th>5</th>
                        <th>6</th>
                        <th>7</th>
                        <th>8</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (byte teamA in centralTeams)
                    {
                        string aux = Model.teams.getTeamName(teamA).Replace(" ", "").Replace(".", "") + "_logo";
                    <tr>
                        <td><span class="@aux"></span></td>
                        <td>@Model.teams.getTeamName(teamA)</td>
                        @for (int i = 0; i < centralTeams.Length; i++)
                        {
                            double res = @Model.standings.magicNumbersDivision[teamA][i];
                            if (res == double.MaxValue)
                            {
                                <td class="table-danger">*</td>
                            }
                            else if ((Math.Round(res % Math.PI, 2) == 0) && res != 0)
                            {
                                res = ((res / 2) / Math.PI);
                                <td class="table-warning">@res</td>
                            }
                            else if ((Math.Round((res % Math.PI - Math.PI), 2) == 0) && res != 0)
                            {
                                res = Math.Round((res / 2) / Math.PI);
                                <td class="table-warning">@res</td>
                            }
                            else if (res > 0)
                            {
                                <td class="table-primary">@res</td>
                            }
                            else if (res == 0)
                            {
                                <td class="table-info">-</td>
                            }
                            else
                            {
                                <td class="table-success">@better</td>
                            }
                        }
                    </tr>
                    }
                </tbody>
            </table>
        </div>
        <div style="float: right">
            <h4>PACIFIC DIVISION</h4>
            <table class="table table-dark" style="color: white;">
                <thead class="thead-light">
                    <tr>
                        <th colspan="2">Team</th>
                        <th>1</th>
                        <th>2</th>
                        <th>3</th>
                        <th>4</th>
                        <th>5</th>
                        <th>6</th>
                        <th>7</th>
                        <th>8</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (byte teamA in pacificTeams)
                    {
                        string aux = Model.teams.getTeamName(teamA).Replace(" ", "").Replace(".", "") + "_logo";
                    <tr>
                        <td><span class="@aux"></span></td>
                        <td>@Model.teams.getTeamName(teamA)</td>
                        @for (int i = 0; i < pacificTeams.Length; i++)
                        {
                            double res = @Model.standings.magicNumbersDivision[teamA][i];
                            if (res == double.MaxValue)
                            {
                                <td class="table-danger">*</td>
                            }
                            else if ((Math.Round(res % Math.PI, 2) == 0) && res != 0)
                            {
                                res = ((res / 2) / Math.PI);
                                <td class="table-warning">@res</td>
                            }
                            else if ((Math.Round((res % Math.PI - Math.PI), 2) == 0) && res != 0)
                            {
                                res = Math.Round((res / 2) / Math.PI);
                                <td class="table-warning">@res</td>
                            }
                            else if (res > 0)
                            {
                                <td class="table-primary">@res</td>
                            }
                            else if (res == 0)
                            {
                                <td class="table-info">-</td>
                            }
                            else
                            {
                                <td class="table-success">@better</td>
                            }
                        }
                    </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div>
        <h4>WESTERN WILDCARDS</h4>
        <table class="table table-dark" style="color: white;">
            <thead class="thead-light">
                <tr>
                    <th colspan="2">Team</th>
                    <th>1</th>
                    <th>2</th>
                    <th>3</th>
                    <th>4</th>
                    <th>5</th>
                    <th>6</th>
                    <th>7</th>
                    <th>8</th>
                    <th>9</th>
                    <th>10</th>
                </tr>
            </thead>
            <tbody>
                @foreach (byte teamA in westernTeams)
                {
                    string aux = Model.teams.getTeamName(teamA).Replace(" ", "").Replace(".", "") + "_logo";
                <tr>
                    <td><span class="@aux"></span></td>
                    <td>@Model.teams.getTeamName(teamA)</td>
                    @for (int i = 0; i < centralTeams.Length; i++)
                    {
                        double res = @Model.standings.magicNumbersDivision[teamA][i];
                        if (res == double.MaxValue)
                        {
                            <td class="table-danger">*</td>
                        }
                        else if ((Math.Round(res % Math.PI, 2) == 0) && res != 0)
                        {
                            res = ((res / 2) / Math.PI);
                            <td class="table-warning">@res</td>
                        }
                        else if ((Math.Round((res % Math.PI - Math.PI), 2) == 0) && res != 0)
                        {
                            res = Math.Round((res / 2) / Math.PI);
                            <td class="table-warning">@res</td>
                        }
                        else if (res > 0)
                        {
                            <td class="table-primary">@res</td>
                        }
                        else if (res == 0)
                        {
                            <td class="table-info">-</td>
                        }
                        else
                        {
                            <td class="table-success">@better</td>
                        }
                    }
                </tr>
                }
            </tbody>
        </table>
    </div>
</div>
